# Production Environment Configuration
# Landscape Architecture Tool - Business System

# Database Configuration
DATABASE_URL=postgresql://landscape_user:CHANGE_THIS_PASSWORD@postgres:5432/landscape_production
REDIS_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/0
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD

# Security Configuration
SECRET_KEY=GENERATE_SECURE_SECRET_KEY_HERE_64_CHARACTERS_MIN
FLASK_ENV=production
DEBUG=false

# Domain and CORS Configuration
DOMAIN=your-domain.com
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Email Configuration (for notifications and user management)
SMTP_SERVER=smtp.your-domain.com
SMTP_PORT=587
SMTP_USERNAME=noreply@your-domain.com
SMTP_PASSWORD=your-email-password
SMTP_USE_TLS=true

# AI Services Configuration (Optional - for intelligent data mapping)
OPENAI_API_KEY=your-openai-api-key-for-ai-assistance

# Business Information (for invoices and branding)
COMPANY_NAME=Your Landscape Architecture Company
COMPANY_ADDRESS=Your Business Address, City, Postal Code
COMPANY_VAT=NL123456789B01
COMPANY_EMAIL=info@your-domain.com
COMPANY_PHONE=+31 20 123 4567

# SSL Configuration
SSL_EMAIL=admin@your-domain.com

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=/app/logs/landscape-tool.log

# Rate Limiting Configuration
RATELIMIT_STORAGE_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/1

# File Upload Configuration
MAX_CONTENT_LENGTH=52428800  # 50MB in bytes
UPLOAD_FOLDER=/app/uploads

# Session Configuration
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=Lax

# Performance Configuration
WTF_CSRF_TIME_LIMIT=3600  # 1 hour
SQLALCHEMY_ENGINE_OPTIONS={"pool_pre_ping": true, "pool_recycle": 300}

# Backup Configuration
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# Monitoring Configuration (Optional)
SENTRY_DSN=your-sentry-dsn-for-error-tracking
HEALTH_CHECK_INTERVAL=30

# Admin User Configuration (for initial setup)
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@your-domain.com
# Note: Admin password should be set interactively using create_admin_user.py