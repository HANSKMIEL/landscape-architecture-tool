name: Deploy to Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/deploy-production.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install pytest
        run: |
          pip install pytest
      
      - name: Run tests
        run: |
          pytest tests/
      
      - name: Install deployment tools
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass rsync
      
      - name: Deploy to VPS
        env:
          SSH_PASSWORD: ${{ secrets.VPS_SSH_PASSWORD }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          # Deploy frontend
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "mkdir -p /var/www/landscape-tool/frontend/dist"
          sshpass -p "$SSH_PASSWORD" rsync -avz --delete frontend/dist/ $VPS_USER@$VPS_HOST:/var/www/landscape-tool/frontend/dist/
          
          # Deploy backend
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "mkdir -p /var/www/landscape-tool/backend"
          sshpass -p "$SSH_PASSWORD" rsync -avz --delete src/ $VPS_USER@$VPS_HOST:/var/www/landscape-tool/backend/
          
          # Restart services
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "systemctl restart nginx && cd /var/www/landscape-tool/backend && source venv/bin/activate && pkill -f gunicorn || true && gunicorn -b 127.0.0.1:5000 main:app --daemon"
      
      - name: Verify deployment
        env:
          SSH_PASSWORD: ${{ secrets.VPS_SSH_PASSWORD }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          # Test API health endpoint
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "curl -s http://localhost:5000/api/health"
          
          # Test frontend is accessible
          curl -s -I http://$VPS_HOST | grep "200 OK"
