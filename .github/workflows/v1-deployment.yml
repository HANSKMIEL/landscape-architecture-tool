name: V1.00 Package Deployment

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: true
        default: 'github-pages'
        type: choice
        options:
        - github-pages
        - production-vps
        - staging
      confirm_deployment:
        description: 'Confirm V1.00 package deployment'
        required: true
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: v1-deployment-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate-v1-package:
    name: Validate V1.00 Package
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Input
        run: |
          if [ "${{ github.event.inputs.confirm_deployment }}" != "true" ]; then
            echo "❌ Deployment not confirmed"
            exit 1
          fi
          echo "✅ Deployment confirmed"

      - name: Validate V1.00 Package
        run: |
          echo "🔍 Validating V1.00 package structure..."
          
          # Check package structure
          test -d packages/v1.00/backend || { echo "❌ V1.00 backend missing"; exit 1; }
          test -d packages/v1.00/frontend || { echo "❌ V1.00 frontend missing"; exit 1; }
          test -d packages/v1.00/docs || { echo "❌ V1.00 docs missing"; exit 1; }
          
          # Check essential files
          test -f packages/v1.00/backend/main.py || { echo "❌ V1.00 main.py missing"; exit 1; }
          test -f packages/v1.00/frontend/package.json || { echo "❌ V1.00 package.json missing"; exit 1; }
          
          echo "✅ V1.00 package structure validated"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/v1.00/frontend/package-lock.json

      - name: Build V1.00 Frontend
        run: |
          echo "📦 Building V1.00 frontend for deployment..."
          cd packages/v1.00/frontend
          npm ci --legacy-peer-deps
          npm run build

      - name: Upload V1.00 build
        uses: actions/upload-artifact@v4
        with:
          name: v1-build
          path: packages/v1.00/frontend/dist/
          retention-days: 7

  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: validate-v1-package
    if: github.event.inputs.deploy_target == 'github-pages'
    timeout-minutes: 10

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download V1.00 build
        uses: actions/download-artifact@v4
        with:
          name: v1-build
          path: dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        run: |
          echo "🚀 V1.00 successfully deployed to GitHub Pages!"
          echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"

  deploy-production:
    name: Deploy to Production VPS
    runs-on: ubuntu-latest
    needs: validate-v1-package
    if: github.event.inputs.deploy_target == 'production-vps'
    timeout-minutes: 20

    environment:
      name: production
      url: ${{ vars.PRODUCTION_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download V1.00 build
        uses: actions/download-artifact@v4
        with:
          name: v1-build
          path: dist/

      - name: Deploy to VPS
        run: |
          echo "🚀 Deploying V1.00 to production VPS..."
          echo "⚠️ Production deployment requires manual setup"
          echo "📋 V1.00 package ready for deployment"
          echo "📁 Build artifacts available in dist/"
          
          # Create deployment package
          tar -czf v1.00-deployment.tar.gz packages/v1.00/ dist/
          echo "📦 Deployment package created: v1.00-deployment.tar.gz"

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: v1-production-deployment
          path: v1.00-deployment.tar.gz
          retention-days: 30

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: validate-v1-package
    if: github.event.inputs.deploy_target == 'staging'
    timeout-minutes: 15

    environment:
      name: staging
      url: ${{ vars.STAGING_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download V1.00 build
        uses: actions/download-artifact@v4
        with:
          name: v1-build
          path: dist/

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Deploy to Staging
        run: |
          echo "🚀 Deploying V1.00 to staging environment..."
          
          # Install backend dependencies
          pip install -r requirements.txt
          
          # Setup staging environment
          export FLASK_ENV=staging
          export DATABASE_URL=sqlite:///staging.db
          
          # Initialize staging database
          cd packages/v1.00/backend
          PYTHONPATH=. flask --app main db upgrade
          
          echo "✅ V1.00 staging deployment ready"

      - name: Create staging report
        run: |
          echo "## V1.00 Staging Deployment Report" > staging-report.md
          echo "**Package**: V1.00" >> staging-report.md
          echo "**Environment**: Staging" >> staging-report.md
          echo "**Status**: ✅ Deployed" >> staging-report.md
          echo "**Frontend Build**: ✅ Success" >> staging-report.md
          echo "**Backend Setup**: ✅ Ready" >> staging-report.md

      - name: Upload staging report
        uses: actions/upload-artifact@v4
        with:
          name: v1-staging-report
          path: staging-report.md
          retention-days: 14