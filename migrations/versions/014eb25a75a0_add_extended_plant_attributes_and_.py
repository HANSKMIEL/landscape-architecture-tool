"""Add extended Plant attributes and PlantRecommendationRequest model

Revision ID: 014eb25a75a0
Revises: 
Create Date: 2025-07-27 20:33:07.984852

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '014eb25a75a0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('client_type', sa.String(length=50), nullable=True),
    sa.Column('budget_range', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('registration_date', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_recommendation_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_type', sa.String(length=100), nullable=True),
    sa.Column('site_conditions', sa.JSON(), nullable=True),
    sa.Column('hardiness_zone', sa.String(length=20), nullable=True),
    sa.Column('sun_exposure', sa.String(length=50), nullable=True),
    sa.Column('soil_type', sa.String(length=100), nullable=True),
    sa.Column('soil_ph', sa.Float(), nullable=True),
    sa.Column('moisture_level', sa.String(length=50), nullable=True),
    sa.Column('desired_height_min', sa.Float(), nullable=True),
    sa.Column('desired_height_max', sa.Float(), nullable=True),
    sa.Column('desired_width_min', sa.Float(), nullable=True),
    sa.Column('desired_width_max', sa.Float(), nullable=True),
    sa.Column('color_preferences', sa.String(length=200), nullable=True),
    sa.Column('bloom_season', sa.String(length=100), nullable=True),
    sa.Column('maintenance_level', sa.String(length=50), nullable=True),
    sa.Column('budget_range', sa.String(length=50), nullable=True),
    sa.Column('native_preference', sa.Boolean(), nullable=True),
    sa.Column('wildlife_friendly', sa.Boolean(), nullable=True),
    sa.Column('deer_resistant_required', sa.Boolean(), nullable=True),
    sa.Column('pollinator_friendly_required', sa.Boolean(), nullable=True),
    sa.Column('container_planting', sa.Boolean(), nullable=True),
    sa.Column('screening_purpose', sa.Boolean(), nullable=True),
    sa.Column('hedging_purpose', sa.Boolean(), nullable=True),
    sa.Column('groundcover_purpose', sa.Boolean(), nullable=True),
    sa.Column('slope_planting', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('recommended_plants', sa.JSON(), nullable=True),
    sa.Column('user_feedback', sa.JSON(), nullable=True),
    sa.Column('feedback_rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('plants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('common_name', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('height_min', sa.Float(), nullable=True),
    sa.Column('height_max', sa.Float(), nullable=True),
    sa.Column('width_min', sa.Float(), nullable=True),
    sa.Column('width_max', sa.Float(), nullable=True),
    sa.Column('sun_requirements', sa.String(length=50), nullable=True),
    sa.Column('soil_type', sa.String(length=100), nullable=True),
    sa.Column('water_needs', sa.String(length=50), nullable=True),
    sa.Column('hardiness_zone', sa.String(length=20), nullable=True),
    sa.Column('bloom_time', sa.String(length=100), nullable=True),
    sa.Column('bloom_color', sa.String(length=100), nullable=True),
    sa.Column('foliage_color', sa.String(length=100), nullable=True),
    sa.Column('native', sa.Boolean(), nullable=True),
    sa.Column('temperature_min', sa.Float(), nullable=True),
    sa.Column('temperature_max', sa.Float(), nullable=True),
    sa.Column('humidity_preference', sa.String(length=50), nullable=True),
    sa.Column('wind_tolerance', sa.String(length=50), nullable=True),
    sa.Column('soil_ph_min', sa.Float(), nullable=True),
    sa.Column('soil_ph_max', sa.Float(), nullable=True),
    sa.Column('soil_drainage', sa.String(length=50), nullable=True),
    sa.Column('soil_fertility', sa.String(length=50), nullable=True),
    sa.Column('maintenance', sa.String(length=50), nullable=True),
    sa.Column('pruning_needs', sa.String(length=50), nullable=True),
    sa.Column('fertilizer_needs', sa.String(length=50), nullable=True),
    sa.Column('pest_resistance', sa.String(length=50), nullable=True),
    sa.Column('disease_resistance', sa.String(length=50), nullable=True),
    sa.Column('plant_form', sa.String(length=50), nullable=True),
    sa.Column('foliage_texture', sa.String(length=50), nullable=True),
    sa.Column('seasonal_interest', sa.String(length=200), nullable=True),
    sa.Column('fragrance', sa.Boolean(), nullable=True),
    sa.Column('growth_rate', sa.String(length=50), nullable=True),
    sa.Column('mature_spread', sa.Float(), nullable=True),
    sa.Column('root_system', sa.String(length=50), nullable=True),
    sa.Column('wildlife_value', sa.String(length=50), nullable=True),
    sa.Column('pollinator_friendly', sa.Boolean(), nullable=True),
    sa.Column('deer_resistant', sa.Boolean(), nullable=True),
    sa.Column('invasive_potential', sa.String(length=50), nullable=True),
    sa.Column('suitable_for_containers', sa.Boolean(), nullable=True),
    sa.Column('suitable_for_hedging', sa.Boolean(), nullable=True),
    sa.Column('suitable_for_screening', sa.Boolean(), nullable=True),
    sa.Column('suitable_for_groundcover', sa.Boolean(), nullable=True),
    sa.Column('suitable_for_slopes', sa.Boolean(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('availability', sa.String(length=50), nullable=True),
    sa.Column('planting_season', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('sku', sa.String(length=50), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('stock_quantity', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('dimensions', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('project_type', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.String(length=20), nullable=True),
    sa.Column('end_date', sa.String(length=20), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('area_size', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('project_manager', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('projects')
    op.drop_table('products')
    op.drop_table('plants')
    op.drop_table('user')
    op.drop_table('suppliers')
    op.drop_table('plant_recommendation_requests')
    op.drop_table('clients')
    # ### end Alembic commands ###
